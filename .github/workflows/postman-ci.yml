name: API Test with Postman & Newman

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file from secrets
        run: |
          echo "TIME_ZONE=${{ secrets.TIME_ZONE }}" > .env
          echo "JWT_TOKEN_LIFE_SPAN=${{ secrets.JWT_TOKEN_LIFE_SPAN }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
          echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
          echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
          echo "BACKEND_AUTH_GROUP=${{ secrets.BACKEND_AUTH_GROUP }}" >> .env
          echo "BACKEND_REGISTER_URL=${{ secrets.BACKEND_REGISTER_URL }}" >> .env
          echo "BACKEND_LOGIN_URL=${{ secrets.BACKEND_LOGIN_URL }}" >> .env
          echo "BACKEND_SETTINGS_GROUP=${{ secrets.BACKEND_SETTINGS_GROUP }}" >> .env
          echo "BACKEND_USER_URL=${{ secrets.BACKEND_USER_URL }}" >> .env

      - name: Start app
        run: |
          docker compose up --build -d
          until docker compose ps | grep -q "healthy"; do
            echo "Waiting for services to be healthy..."
            sleep 5
          done
          echo "Services are up and running."

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Newman
        run: npm install -g newman

      - name: Test API
        run: newman run ./postman/postman_collection.json --reporters cli,junit --reporter-junit-export results.xml

      - name: Stop app
        run: docker compose down -v